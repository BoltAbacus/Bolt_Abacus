# Generated by quick_setup.py
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone

class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OrganizationTag',
            fields=[
                ('tagId', models.AutoField(primary_key=True, serialize=False)),
                ('organizationName', models.CharField(max_length=255)),
                ('tagName', models.CharField(default='BoltAbacus', max_length=100, unique=True)),
                ('isIndividualTeacher', models.BooleanField(default=False)),
                ('numberOfTeachers', models.IntegerField(default=0)),
                ('numberOfStudents', models.IntegerField(default=0)),
                ('expirationDate', models.DateField(default=django.utils.timezone.now)),
                ('totalNumberOfStudents', models.IntegerField(default=0)),
                ('maxLevel', models.IntegerField(default=1)),
                ('maxClass', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('userId', models.AutoField(primary_key=True, serialize=False)),
                ('firstName', models.CharField(max_length=50)),
                ('lastName', models.CharField(max_length=50)),
                ('phoneNumber', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(max_length=20)),
                ('encryptedPassword', models.CharField(max_length=255)),
                ('created_date', models.DateField()),
                ('blocked', models.BooleanField()),
                ('blockedTimestamp', models.DateField(default=django.utils.timezone.now)),
                ('last_login_date', models.DateField(blank=True, null=True)),
                ('current_streak', models.IntegerField(default=0)),
                ('longest_streak', models.IntegerField(default=0)),
                ('xp', models.IntegerField(default=0)),
                ('tag', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='Authentication.organizationtag')),
            ],
        ),
        migrations.CreateModel(
            name='TopicDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('levelId', models.IntegerField()),
                ('classId', models.IntegerField()),
                ('topicId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('quizId', models.AutoField(primary_key=True, serialize=False)),
                ('levelId', models.IntegerField()),
                ('classId', models.IntegerField()),
                ('topicId', models.IntegerField()),
                ('quizType', models.CharField(max_length=50)),
                ('quizName', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='QuizQuestions',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=1000)),
                ('correctAnswer', models.CharField(max_length=100)),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Authentication.curriculum')),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('time', models.IntegerField(default=0)),
                ('quizPass', models.BooleanField(default=False)),
                ('percentage', models.FloatField(default=0)),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Authentication.curriculum')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Authentication.userdetails')),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('batchId', models.AutoField(primary_key=True, serialize=False)),
                ('timeDay', models.CharField(max_length=20)),
                ('timeSchedule', models.CharField(max_length=100)),
                ('numberOfStudents', models.IntegerField()),
                ('active', models.BooleanField()),
                ('batchName', models.CharField(max_length=255)),
                ('latestLevelId', models.IntegerField()),
                ('latestClassId', models.IntegerField()),
                ('latestLink', models.CharField(max_length=500)),
                ('tag', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='Authentication.organizationtag')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latestLevelId', models.IntegerField(default=1)),
                ('latestClassId', models.IntegerField(default=1)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Authentication.batch')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Authentication.userdetails')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batchId', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.userdetails')),
            ],
        ),
        migrations.CreateModel(
            name='PracticeQuestions',
            fields=[
                ('practiceQuestionId', models.AutoField(primary_key=True, serialize=False)),
                ('practiceType', models.CharField(max_length=20)),
                ('operation', models.CharField(max_length=50)),
                ('numberOfDigits', models.IntegerField(default=1)),
                ('numberOfQuestions', models.IntegerField(default=0)),
                ('numberOfRows', models.IntegerField(default=1)),
                ('zigZag', models.BooleanField(default=False)),
                ('includeSubtraction', models.BooleanField(default=False)),
                ('persistNumberOfDigits', models.BooleanField(default=False)),
                ('score', models.IntegerField(default=0)),
                ('totalTime', models.FloatField(default=0)),
                ('averageTime', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.userdetails')),
            ],
        ),
        migrations.CreateModel(
            name='GameRoom',
            fields=[
                ('roomId', models.AutoField(primary_key=True, serialize=False)),
                ('roomName', models.CharField(max_length=100)),
                ('maxPlayers', models.IntegerField(default=2)),
                ('currentPlayers', models.IntegerField(default=0)),
                ('isActive', models.BooleanField(default=True)),
                ('isPrivate', models.BooleanField(default=False)),
                ('roomCode', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('gameType', models.CharField(default='abacus_pvp', max_length=50)),
                ('difficulty', models.CharField(default='medium', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.userdetails')),
            ],
        ),
        migrations.CreateModel(
            name='GameMatch',
            fields=[
                ('matchId', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(default='waiting', max_length=20)),
                ('gameState', models.TextField(default='{}')),
                ('currentQuestion', models.IntegerField(default=0)),
                ('totalQuestions', models.IntegerField(default=10)),
                ('timeLimit', models.IntegerField(default=60)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.gameroom')),
            ],
        ),
        migrations.CreateModel(
            name='GamePlayer',
            fields=[
                ('playerId', models.AutoField(primary_key=True, serialize=False)),
                ('isReady', models.BooleanField(default=False)),
                ('currentScore', models.IntegerField(default=0)),
                ('totalCorrect', models.IntegerField(default=0)),
                ('totalIncorrect', models.IntegerField(default=0)),
                ('averageTime', models.FloatField(default=0)),
                ('lastAnswerTime', models.DateTimeField(blank=True, null=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.gamematch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.userdetails')),
            ],
            options={
                'unique_together': {('match', 'user')},
            },
        ),
        migrations.CreateModel(
            name='GameQuestion',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('questionNumber', models.IntegerField()),
                ('questionText', models.CharField(max_length=500)),
                ('correctAnswer', models.CharField(max_length=50)),
                ('questionType', models.CharField(default='addition', max_length=50)),
                ('difficulty', models.CharField(default='medium', max_length=20)),
                ('timeLimit', models.IntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.gamematch')),
            ],
            options={
                'unique_together': {('match', 'questionNumber')},
            },
        ),
        migrations.CreateModel(
            name='GameAnswer',
            fields=[
                ('answerId', models.AutoField(primary_key=True, serialize=False)),
                ('answer', models.CharField(max_length=50)),
                ('isCorrect', models.BooleanField()),
                ('responseTime', models.FloatField()),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.gameplayer')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.gamequestion')),
            ],
            options={
                'unique_together': {('question', 'player')},
            },
        ),
        migrations.CreateModel(
            name='PlayerConnection',
            fields=[
                ('connectionId', models.AutoField(primary_key=True, serialize=False)),
                ('isOnline', models.BooleanField(default=True)),
                ('lastSeen', models.DateTimeField(auto_now=True)),
                ('connected_at', models.DateTimeField(auto_now_add=True)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Authentication.gamematch')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Authentication.gameroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.userdetails')),
            ],
            options={
                'unique_together': {('user', 'room', 'match')},
            },
        ),
    ]
