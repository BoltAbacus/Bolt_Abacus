# Generated by Django 4.2.5 on 2025-08-25 14:41

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('Authentication', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='organizationtag',
            name='expirationDate',
            field=models.DateField(default=datetime.datetime.today),
        ),
        migrations.AlterField(
            model_name='userdetails',
            name='blockedTimestamp',
            field=models.DateField(default=datetime.datetime.today),
        ),
        migrations.CreateModel(
            name='UserExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience_points', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Authentication.userdetails')),
            ],
        ),
        migrations.CreateModel(
            name='PVPRoom',
            fields=[
                ('room_id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('max_players', models.IntegerField(default=2)),
                ('current_players', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('waiting', 'Waiting for Players'), ('ready', 'Players Ready'), ('starting', 'Game Starting'), ('active', 'Game Active'), ('finished', 'Game Finished'), ('cancelled', 'Cancelled')], default='waiting', max_length=20)),
                ('number_of_questions', models.IntegerField(default=10)),
                ('time_per_question', models.IntegerField(default=30)),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('expert', 'Expert')], default='medium', max_length=10)),
                ('level_id', models.IntegerField(default=1)),
                ('class_id', models.IntegerField(default=1)),
                ('topic_id', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_rooms', to='Authentication.userdetails')),
            ],
        ),
        migrations.CreateModel(
            name='PVPGameSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_question_index', models.IntegerField(default=0)),
                ('question_start_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('current_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Authentication.quizquestions')),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='game_session', to='Authentication.pvproom')),
            ],
        ),
        migrations.CreateModel(
            name='PVPGameResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winner_score', models.IntegerField(default=0)),
                ('winner_correct_answers', models.IntegerField(default=0)),
                ('winner_time', models.FloatField(default=0)),
                ('experience_awarded', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='game_result', to='Authentication.pvproom')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pvp_wins', to='Authentication.userdetails')),
            ],
        ),
        migrations.CreateModel(
            name='PVPRoomPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('joined', 'Joined'), ('ready', 'Ready'), ('playing', 'Playing'), ('finished', 'Finished'), ('left', 'Left')], default='joined', max_length=20)),
                ('is_ready', models.BooleanField(default=False)),
                ('score', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('total_time', models.FloatField(default=0)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('ready_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvp_rooms', to='Authentication.userdetails')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='Authentication.pvproom')),
            ],
            options={
                'unique_together': {('room', 'player')},
            },
        ),
        migrations.CreateModel(
            name='PVPPlayerAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('time_taken', models.FloatField(default=0)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('game_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_answers', to='Authentication.pvpgamesession')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.userdetails')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.quizquestions')),
            ],
            options={
                'unique_together': {('game_session', 'player', 'question')},
            },
        ),
    ]
